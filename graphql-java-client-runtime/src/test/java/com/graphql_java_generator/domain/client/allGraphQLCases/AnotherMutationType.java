  /** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.client.allGraphQLCases;

import java.util.HashMap;
import java.util.Map;


import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLQuery;
import com.graphql_java_generator.annotation.GraphQLScalar;
import com.graphql_java_generator.exception.GraphQLRequestExecutionException;
import com.graphql_java_generator.exception.GraphQLRequestPreparationException;
import com.graphql_java_generator.client.GraphQLObjectMapper;
import com.graphql_java_generator.client.request.InputParameter;
import com.graphql_java_generator.client.request.ObjectResponse;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.RequestType;
import java.util.List;

import com.graphql_java_generator.client.GraphqlClientUtils;

/**
 * This class contains the response for a full request. See the 
 * <A HREF="https://graphql-maven-plugin-project.graphql-java-generator.com/exec_graphql_requests.html">plugin web site</A> 
 * for more information on full and partial requests.<BR/>
 * It also allows access to the _extensions_ part of the response. Take a look at the 
 * <A HRE="https://spec.graphql.org/June2018/#sec-Response">GraphQL spec</A> for more information on this.
 * 
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLQuery(name = "AnotherMutationType", type = RequestType.mutation)
@GraphQLObjectType("AnotherMutationType")
@SuppressWarnings("unused")
public class AnotherMutationType extends AnotherMutationTypeExecutorMySchema implements com.graphql_java_generator.client.GraphQLRequestObject {

	private GraphQLObjectMapper extensionMapper = null;
	private JsonNode extensions;
	private Map<String, JsonNode> extensionsAsMap = null;



	/**
	 * This map contains the deserialized values for the alias, as parsed from the json response from the GraphQL
	 * server. The key is the alias name, the value is the deserialiazed value (taking into account custom scalars,
	 * lists, ...)
	 */
	@com.graphql_java_generator.annotation.GraphQLIgnore
	Map<String, Object> aliasValues = new HashMap<>();

	public AnotherMutationType(){
		// No action
	}

	@JsonProperty("createHuman")
	@GraphQLInputParameters(names = {"human"}, types = {"HumanInput"}, mandatories = {true}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLNonScalar(fieldName = "createHuman", graphQLTypeSimpleName = "Human", javaClass = Human.class)
	Human createHuman;


	@JsonProperty("createAllFieldCases")
	@GraphQLInputParameters(names = {"input"}, types = {"AllFieldCasesInput"}, mandatories = {true}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLNonScalar(fieldName = "createAllFieldCases", graphQLTypeSimpleName = "AllFieldCases", javaClass = AllFieldCases.class)
	AllFieldCases createAllFieldCases;


	/**
	 *  Tests for issue 51
	 */
	@JsonProperty("deleteSnacks")
	@GraphQLInputParameters(names = {"id"}, types = {"ID"}, mandatories = {false}, listDepths = {1}, itemsMandatory = {false})
	@GraphQLScalar(fieldName = "deleteSnacks", graphQLTypeSimpleName = "Boolean", javaClass = java.lang.Boolean.class)
	java.lang.Boolean deleteSnacks;


	/**
	 *  test for issue #139 (use of java reserved keyword)
	 */
	@JsonProperty("if")
	@GraphQLScalar(fieldName = "if", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _if;


	@JsonProperty("implements")
	@GraphQLScalar(fieldName = "implements", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _implements;


	@JsonProperty("__typename")
	@GraphQLScalar(fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String __typename;



	public void setCreateHuman(Human createHuman) {
		this.createHuman = createHuman;
	}

	public Human getCreateHuman() {
		return createHuman;
	}
		

	public void setCreateAllFieldCases(AllFieldCases createAllFieldCases) {
		this.createAllFieldCases = createAllFieldCases;
	}

	public AllFieldCases getCreateAllFieldCases() {
		return createAllFieldCases;
	}
		

	/**
	 *  Tests for issue 51
	 */
	public void setDeleteSnacks(java.lang.Boolean deleteSnacks) {
		this.deleteSnacks = deleteSnacks;
	}

	/**
	 *  Tests for issue 51
	*/
	public java.lang.Boolean getDeleteSnacks() {
		return deleteSnacks;
	}
		

	/**
	 *  test for issue #139 (use of java reserved keyword)
	 */
	public void setIf(java.lang.String _if) {
		this._if = _if;
	}

	/**
	 *  test for issue #139 (use of java reserved keyword)
	*/
	public java.lang.String getIf() {
		return _if;
	}
		

	public void setImplements(java.lang.String _implements) {
		this._implements = _implements;
	}

	public java.lang.String getImplements() {
		return _implements;
	}
		

	public void set__typename(java.lang.String __typename) {
		this.__typename = __typename;
	}

	public java.lang.String get__typename() {
		return __typename;
	}
		

 
	/**
	 * This method is called during the json deserialization process, by the {@link GraphQLObjectMapper}, each time an
	 * alias value is read from the json.
	 * 
	 * @param aliasName
	 * @param aliasDeserializedValue
	 */
	public void setAliasValue(String aliasName, Object aliasDeserializedValue) {
		aliasValues.put(aliasName, aliasDeserializedValue);
	}

	/**
	 * Retrieves the value for the given alias, as it has been received for this object in the GraphQL response. <BR/>
	 * This method <B>should not be used for Custom Scalars</B>, as the parser doesn't know if this alias is a custom
	 * scalar, and which custom scalar to use at deserialization time. In most case, a value will then be provided by
	 * this method with a basis json deserialization, but this value won't be the proper custom scalar value.
	 * 
	 * @param alias
	 * @return
	 */
	public Object getAliasValue(String alias) {
		return aliasValues.get(alias);
	}

    public String toString() {
        return "AnotherMutationType {"
				+ "createHuman: " + createHuman
				+ ", "
				+ "createAllFieldCases: " + createAllFieldCases
				+ ", "
				+ "deleteSnacks: " + deleteSnacks
				+ ", "
				+ "_if: " + _if
				+ ", "
				+ "_implements: " + _implements
				+ ", "
				+ "__typename: " + __typename
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private Human createHuman;
		private AllFieldCases createAllFieldCases;
		private java.lang.Boolean deleteSnacks;
		private java.lang.String _if;
		private java.lang.String _implements;

		public Builder withCreateHuman(Human createHuman) {
			this.createHuman = createHuman;
			return this;
		}
		public Builder withCreateAllFieldCases(AllFieldCases createAllFieldCases) {
			this.createAllFieldCases = createAllFieldCases;
			return this;
		}
		public Builder withDeleteSnacks(java.lang.Boolean deleteSnacks) {
			this.deleteSnacks = deleteSnacks;
			return this;
		}
		public Builder withIf(java.lang.String _if) {
			this._if = _if;
			return this;
		}
		public Builder withImplements(java.lang.String _implements) {
			this._implements = _implements;
			return this;
		}

		public AnotherMutationType build() {
			AnotherMutationType _object = new AnotherMutationType();
			_object.setCreateHuman(createHuman);
			_object.setCreateAllFieldCases(createAllFieldCases);
			_object.setDeleteSnacks(deleteSnacks);
			_object.setIf(_if);
			_object.setImplements(_implements);
			_object.set__typename("AnotherMutationType");
			return _object;
		}
	}

	private GraphQLObjectMapper getExtensionMapper() {
		if (extensionMapper == null) {
			extensionMapper = new GraphQLObjectMapper("com.graphql_java_generator.domain.client.allGraphQLCases", null);
		}
		return extensionMapper;
	}
	
	public JsonNode getExtensions() {
		return extensions;
	}
	
	public void setExtensions(JsonNode extensions) {
		this.extensions = extensions;
	}
	
	/**
	 * Returns the extensions as a map. The values can't be deserialized, as their type is unknown.
	 * 
	 * @return
	 */
	public Map<String, JsonNode> getExtensionsAsMap() {
		if (extensionsAsMap == null) {
			extensionsAsMap = getExtensionMapper().convertValue(extensions, new TypeReference<Map<String, JsonNode>>() {
			});
		}
		return extensionsAsMap;
	}
	
	/**
	 * Parse the value for the given _key_, as found in the <I>extensions</I> field of the GraphQL server's response,
	 * into the given _t_ class.
	 * 
	 * @param <T>
	 * @param key
	 * @param t
	 * @return null if the key is not in the <I>extensions</I> map. Otherwise: the value for this _key_, as a _t_
	 *         instance
	 * @throws JsonProcessingException
	 *             When there is an error when converting the key's value into the _t_ class
	 */
	public <T> T getExtensionsField(String key, Class<T> t) throws JsonProcessingException {
		JsonNode node = getExtensionsAsMap().get(key);
		return (node == null) ? null : getExtensionMapper().treeToValue(node, t);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public AnotherMutationTypeResponse execWithBindValues(String queryResponseDef, Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.exec(queryResponseDef, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public AnotherMutationTypeResponse exec(String queryResponseDef, Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.exec(queryResponseDef, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public AnotherMutationTypeResponse execWithBindValues(ObjectResponse objectResponse, Map<String, Object> parameters)
			throws GraphQLRequestExecutionException {
		return super.execWithBindValues(objectResponse, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public AnotherMutationTypeResponse exec(ObjectResponse objectResponse, Object... paramsAndValues)
			throws GraphQLRequestExecutionException {
		return super.exec(objectResponse, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getResponseBuilder();
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getGraphQLRequest(String fullRequest) throws GraphQLRequestPreparationException {
		return super.getGraphQLRequest(fullRequest);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "createHuman", graphQLTypeSimpleName = "Human", javaClass = Human.class)
	public Human createHumanWithBindValues(
			String queryResponseDef,
			HumanInput human,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.createHumanWithBindValues(queryResponseDef, human, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "createHuman", graphQLTypeSimpleName = "Human", javaClass = Human.class)
	public Human createHuman(
			String queryResponseDef,
			HumanInput human,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.createHuman(queryResponseDef, human, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "createHuman", graphQLTypeSimpleName = "Human", javaClass = Human.class)
	public Human createHumanWithBindValues(
			ObjectResponse objectResponse,
			HumanInput human,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.createHumanWithBindValues(objectResponse, human, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "createHuman", graphQLTypeSimpleName = "Human", javaClass = Human.class)
	public Human createHuman(
			ObjectResponse objectResponse,
			HumanInput human,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.createHuman(objectResponse, human, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getCreateHumanResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getCreateHumanResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getCreateHumanGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getCreateHumanGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "createAllFieldCases", graphQLTypeSimpleName = "AllFieldCases", javaClass = AllFieldCases.class)
	public AllFieldCases createAllFieldCasesWithBindValues(
			String queryResponseDef,
			AllFieldCasesInput input,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.createAllFieldCasesWithBindValues(queryResponseDef, input, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "createAllFieldCases", graphQLTypeSimpleName = "AllFieldCases", javaClass = AllFieldCases.class)
	public AllFieldCases createAllFieldCases(
			String queryResponseDef,
			AllFieldCasesInput input,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.createAllFieldCases(queryResponseDef, input, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "createAllFieldCases", graphQLTypeSimpleName = "AllFieldCases", javaClass = AllFieldCases.class)
	public AllFieldCases createAllFieldCasesWithBindValues(
			ObjectResponse objectResponse,
			AllFieldCasesInput input,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.createAllFieldCasesWithBindValues(objectResponse, input, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "createAllFieldCases", graphQLTypeSimpleName = "AllFieldCases", javaClass = AllFieldCases.class)
	public AllFieldCases createAllFieldCases(
			ObjectResponse objectResponse,
			AllFieldCasesInput input,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.createAllFieldCases(objectResponse, input, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getCreateAllFieldCasesResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getCreateAllFieldCasesResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getCreateAllFieldCasesGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getCreateAllFieldCasesGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "deleteSnacks", graphQLTypeSimpleName = "Boolean", javaClass = java.lang.Boolean.class)
	public java.lang.Boolean deleteSnacksWithBindValues(
			String queryResponseDef,
			List<java.lang.String> id,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.deleteSnacksWithBindValues(queryResponseDef, id, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "deleteSnacks", graphQLTypeSimpleName = "Boolean", javaClass = java.lang.Boolean.class)
	public java.lang.Boolean deleteSnacks(
			String queryResponseDef,
			List<java.lang.String> id,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.deleteSnacks(queryResponseDef, id, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "deleteSnacks", graphQLTypeSimpleName = "Boolean", javaClass = java.lang.Boolean.class)
	public java.lang.Boolean deleteSnacksWithBindValues(
			ObjectResponse objectResponse,
			List<java.lang.String> id,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.deleteSnacksWithBindValues(objectResponse, id, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "deleteSnacks", graphQLTypeSimpleName = "Boolean", javaClass = java.lang.Boolean.class)
	public java.lang.Boolean deleteSnacks(
			ObjectResponse objectResponse,
			List<java.lang.String> id,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.deleteSnacks(objectResponse, id, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getDeleteSnacksResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getDeleteSnacksResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getDeleteSnacksGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getDeleteSnacksGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "if", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String _ifWithBindValues(
			String queryResponseDef,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super._ifWithBindValues(queryResponseDef, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "if", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String _if(
			String queryResponseDef,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super._if(queryResponseDef, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "if", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String _ifWithBindValues(
			ObjectResponse objectResponse,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super._ifWithBindValues(objectResponse, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "if", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String _if(
			ObjectResponse objectResponse,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super._if(objectResponse, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getIfResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getIfResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getIfGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getIfGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "implements", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String _implementsWithBindValues(
			String queryResponseDef,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super._implementsWithBindValues(queryResponseDef, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "implements", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String _implements(
			String queryResponseDef,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super._implements(queryResponseDef, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "implements", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String _implementsWithBindValues(
			ObjectResponse objectResponse,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super._implementsWithBindValues(objectResponse, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "implements", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String _implements(
			ObjectResponse objectResponse,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super._implements(objectResponse, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getImplementsResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getImplementsResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getImplementsGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getImplementsGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String __typenameWithBindValues(
			String queryResponseDef,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.__typenameWithBindValues(queryResponseDef, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String __typename(
			String queryResponseDef,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.__typename(queryResponseDef, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String __typenameWithBindValues(
			ObjectResponse objectResponse,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.__typenameWithBindValues(objectResponse, parameters);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String __typename(
			ObjectResponse objectResponse,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.__typename(objectResponse, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder get__typenameResponseBuilder() throws GraphQLRequestPreparationException {
		return super.get__typenameResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link AnotherMutationTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest get__typenameGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.get__typenameGraphQLRequest(partialRequest);
	}
	
}
