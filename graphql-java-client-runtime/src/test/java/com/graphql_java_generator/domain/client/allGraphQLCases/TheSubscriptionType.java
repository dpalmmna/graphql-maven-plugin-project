  /** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.client.allGraphQLCases;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLQuery;
import com.graphql_java_generator.annotation.GraphQLScalar;
import com.graphql_java_generator.exception.GraphQLRequestExecutionException;
import com.graphql_java_generator.exception.GraphQLRequestPreparationException;
import com.graphql_java_generator.client.GraphQLObjectMapper;
import com.graphql_java_generator.client.request.InputParameter;
import com.graphql_java_generator.client.request.ObjectResponse;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.RequestType;
import java.util.List;

import com.graphql_java_generator.client.GraphqlClientUtils;
import com.graphql_java_generator.client.SubscriptionCallback;
import com.graphql_java_generator.client.SubscriptionClient;

/**
 * This class contains the response for a full request. See the 
 * <A HREF="https://graphql-maven-plugin-project.graphql-java-generator.com/client_subscription.html">plugin web site</A> 
 * for more information on full and partial requests.<BR/>
 * It also allows access to the _extensions_ part of the response. Take a look at the 
 * <A HRE="https://spec.graphql.org/June2018/#sec-Response">GraphQL spec</A> for more information on this.
 * 
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLQuery(name = "TheSubscriptionType", type = RequestType.subscription)
@GraphQLObjectType("TheSubscriptionType")
@SuppressWarnings("unused")
public class TheSubscriptionType extends TheSubscriptionTypeExecutorMySchema implements com.graphql_java_generator.client.GraphQLRequestObject {

	private GraphQLObjectMapper extensionMapper = null;
	private JsonNode extensions;
	private Map<String, JsonNode> extensionsAsMap = null;



	/**
	 * This map contains the deserialized values for the alias, as parsed from the json response from the GraphQL
	 * server. The key is the alias name, the value is the deserialiazed value (taking into account custom scalars,
	 * lists, ...)
	 */
	@com.graphql_java_generator.annotation.GraphQLIgnore
	Map<String, Object> aliasValues = new HashMap<>();

	public TheSubscriptionType(){
		// No action
	}

	/**
	 *  Will be notified for each Human added to this Episode 
	 */
	@JsonProperty("subscribeNewHumanForEpisode")
	@GraphQLInputParameters(names = {"episode"}, types = {"Episode"}, mandatories = {true}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLNonScalar(fieldName = "subscribeNewHumanForEpisode", graphQLTypeSimpleName = "Human", javaClass = Human.class)
	Human subscribeNewHumanForEpisode;


	/**
	 *  Issue 54
	 */
	@JsonProperty("subscribeToAList")
	@JsonDeserialize(using = CustomJacksonDeserializers.ListInt.class)
	@GraphQLScalar(fieldName = "subscribeToAList", graphQLTypeSimpleName = "Int", javaClass = java.lang.Integer.class)
	List<java.lang.Integer> subscribeToAList;


	@JsonProperty("subscribeToAListOfScalars")
	@JsonDeserialize(using = CustomJacksonDeserializers.ListDate.class)
	@GraphQLScalar(fieldName = "subscribeToAListOfScalars", graphQLTypeSimpleName = "Date", javaClass = java.util.Date.class)
	List<java.util.Date> subscribeToAListOfScalars;


	/**
	 *  issue53 is about custom scalars as parameter for a query/mutation/subscription, that was not properly serialized/deserialized
	 */
	@JsonProperty("issue53")
	@JsonDeserialize(using = CustomJacksonDeserializers.Date.class)
	@GraphQLInputParameters(names = {"date"}, types = {"Date"}, mandatories = {true}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLScalar(fieldName = "issue53", graphQLTypeSimpleName = "Date", javaClass = java.util.Date.class)
	java.util.Date issue53;


	/**
	 *  Some subscriptions to test all kind of input parameters (to check proper serialization and deserialization)
	 */
	@JsonProperty("allGraphQLCasesInput")
	@GraphQLInputParameters(names = {"input"}, types = {"AllFieldCasesInput"}, mandatories = {true}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLNonScalar(fieldName = "allGraphQLCasesInput", graphQLTypeSimpleName = "AllFieldCases", javaClass = AllFieldCases.class)
	AllFieldCases allGraphQLCasesInput;


	@JsonProperty("allGraphQLCasesParam")
	@GraphQLInputParameters(names = {"id", "name", "age", "integer", "date", "dates", "matrix", "oneWithoutIdSubtype", "listWithoutIdSubtype"}, types = {"String", "String", "Long", "Int", "Date", "Date", "Float", "AllFieldCasesWithoutIdSubtypeInput", "AllFieldCasesWithoutIdSubtypeInput"}, mandatories = {true, true, true, true, true, true, true, true, true}, listDepths = {0, 0, 0, 0, 0, 1, 2, 0, 1}, itemsMandatory = {false, false, false, false, false, false, false, false, true})
	@GraphQLNonScalar(fieldName = "allGraphQLCasesParam", graphQLTypeSimpleName = "AllFieldCases", javaClass = AllFieldCases.class)
	AllFieldCases allGraphQLCasesParam;


	/**
	 *  A dummy subscription, that allows to test errors (and other strange behavior), and their return to the subscription's client
	 */
	@JsonProperty("subscriptionTest")
	@GraphQLInputParameters(names = {"param"}, types = {"SubscriptionTestParam"}, mandatories = {true}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLScalar(fieldName = "subscriptionTest", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String subscriptionTest;


	/**
	 *  Issue 122: Check Subscription behavior when notification response is null
	 */
	@JsonProperty("subscriptionWithNullResponse")
	@GraphQLScalar(fieldName = "subscriptionWithNullResponse", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String subscriptionWithNullResponse;


	/**
	 *  test for issue #139 (use of java reserved keyword)
	 */
	@JsonProperty("enumWithReservedJavaKeywordAsValues")
	@GraphQLScalar(fieldName = "enumWithReservedJavaKeywordAsValues", graphQLTypeSimpleName = "EnumWithReservedJavaKeywordAsValues", javaClass = EnumWithReservedJavaKeywordAsValues.class)
	EnumWithReservedJavaKeywordAsValues enumWithReservedJavaKeywordAsValues;


	@JsonProperty("listOfEnumWithReservedJavaKeywordAsValues")
	@JsonDeserialize(using = CustomJacksonDeserializers.ListEnumWithReservedJavaKeywordAsValues.class)
	@GraphQLScalar(fieldName = "listOfEnumWithReservedJavaKeywordAsValues", graphQLTypeSimpleName = "EnumWithReservedJavaKeywordAsValues", javaClass = EnumWithReservedJavaKeywordAsValues.class)
	List<EnumWithReservedJavaKeywordAsValues> listOfEnumWithReservedJavaKeywordAsValues;


	@JsonProperty("if")
	@GraphQLScalar(fieldName = "if", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _if;


	@JsonProperty("implements")
	@GraphQLScalar(fieldName = "implements", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String _implements;


	@JsonProperty("__typename")
	@GraphQLScalar(fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String __typename;



	/**
	 *  Will be notified for each Human added to this Episode 
	 */
	public void setSubscribeNewHumanForEpisode(Human subscribeNewHumanForEpisode) {
		this.subscribeNewHumanForEpisode = subscribeNewHumanForEpisode;
	}

	/**
	 *  Will be notified for each Human added to this Episode 
	*/
	public Human getSubscribeNewHumanForEpisode() {
		return subscribeNewHumanForEpisode;
	}
		

	/**
	 *  Issue 54
	 */
	public void setSubscribeToAList(List<java.lang.Integer> subscribeToAList) {
		this.subscribeToAList = subscribeToAList;
	}

	/**
	 *  Issue 54
	*/
	public List<java.lang.Integer> getSubscribeToAList() {
		return subscribeToAList;
	}
		

	public void setSubscribeToAListOfScalars(List<java.util.Date> subscribeToAListOfScalars) {
		this.subscribeToAListOfScalars = subscribeToAListOfScalars;
	}

	public List<java.util.Date> getSubscribeToAListOfScalars() {
		return subscribeToAListOfScalars;
	}
		

	/**
	 *  issue53 is about custom scalars as parameter for a query/mutation/subscription, that was not properly serialized/deserialized
	 */
	public void setIssue53(java.util.Date issue53) {
		this.issue53 = issue53;
	}

	/**
	 *  issue53 is about custom scalars as parameter for a query/mutation/subscription, that was not properly serialized/deserialized
	*/
	public java.util.Date getIssue53() {
		return issue53;
	}
		

	/**
	 *  Some subscriptions to test all kind of input parameters (to check proper serialization and deserialization)
	 */
	public void setAllGraphQLCasesInput(AllFieldCases allGraphQLCasesInput) {
		this.allGraphQLCasesInput = allGraphQLCasesInput;
	}

	/**
	 *  Some subscriptions to test all kind of input parameters (to check proper serialization and deserialization)
	*/
	public AllFieldCases getAllGraphQLCasesInput() {
		return allGraphQLCasesInput;
	}
		

	public void setAllGraphQLCasesParam(AllFieldCases allGraphQLCasesParam) {
		this.allGraphQLCasesParam = allGraphQLCasesParam;
	}

	public AllFieldCases getAllGraphQLCasesParam() {
		return allGraphQLCasesParam;
	}
		

	/**
	 *  A dummy subscription, that allows to test errors (and other strange behavior), and their return to the subscription's client
	 */
	public void setSubscriptionTest(java.lang.String subscriptionTest) {
		this.subscriptionTest = subscriptionTest;
	}

	/**
	 *  A dummy subscription, that allows to test errors (and other strange behavior), and their return to the subscription's client
	*/
	public java.lang.String getSubscriptionTest() {
		return subscriptionTest;
	}
		

	/**
	 *  Issue 122: Check Subscription behavior when notification response is null
	 */
	public void setSubscriptionWithNullResponse(java.lang.String subscriptionWithNullResponse) {
		this.subscriptionWithNullResponse = subscriptionWithNullResponse;
	}

	/**
	 *  Issue 122: Check Subscription behavior when notification response is null
	*/
	public java.lang.String getSubscriptionWithNullResponse() {
		return subscriptionWithNullResponse;
	}
		

	/**
	 *  test for issue #139 (use of java reserved keyword)
	 */
	public void setEnumWithReservedJavaKeywordAsValues(EnumWithReservedJavaKeywordAsValues enumWithReservedJavaKeywordAsValues) {
		this.enumWithReservedJavaKeywordAsValues = enumWithReservedJavaKeywordAsValues;
	}

	/**
	 *  test for issue #139 (use of java reserved keyword)
	*/
	public EnumWithReservedJavaKeywordAsValues getEnumWithReservedJavaKeywordAsValues() {
		return enumWithReservedJavaKeywordAsValues;
	}
		

	public void setListOfEnumWithReservedJavaKeywordAsValues(List<EnumWithReservedJavaKeywordAsValues> listOfEnumWithReservedJavaKeywordAsValues) {
		this.listOfEnumWithReservedJavaKeywordAsValues = listOfEnumWithReservedJavaKeywordAsValues;
	}

	public List<EnumWithReservedJavaKeywordAsValues> getListOfEnumWithReservedJavaKeywordAsValues() {
		return listOfEnumWithReservedJavaKeywordAsValues;
	}
		

	public void setIf(java.lang.String _if) {
		this._if = _if;
	}

	public java.lang.String getIf() {
		return _if;
	}
		

	public void setImplements(java.lang.String _implements) {
		this._implements = _implements;
	}

	public java.lang.String getImplements() {
		return _implements;
	}
		

	public void set__typename(java.lang.String __typename) {
		this.__typename = __typename;
	}

	public java.lang.String get__typename() {
		return __typename;
	}
		

 
	/**
	 * This method is called during the json deserialization process, by the {@link GraphQLObjectMapper}, each time an
	 * alias value is read from the json.
	 * 
	 * @param aliasName
	 * @param aliasDeserializedValue
	 */
	public void setAliasValue(String aliasName, Object aliasDeserializedValue) {
		aliasValues.put(aliasName, aliasDeserializedValue);
	}

	/**
	 * Retrieves the value for the given alias, as it has been received for this object in the GraphQL response. <BR/>
	 * This method <B>should not be used for Custom Scalars</B>, as the parser doesn't know if this alias is a custom
	 * scalar, and which custom scalar to use at deserialization time. In most case, a value will then be provided by
	 * this method with a basis json deserialization, but this value won't be the proper custom scalar value.
	 * 
	 * @param alias
	 * @return
	 */
	public Object getAliasValue(String alias) {
		return aliasValues.get(alias);
	}

    public String toString() {
        return "TheSubscriptionType {"
				+ "subscribeNewHumanForEpisode: " + subscribeNewHumanForEpisode
				+ ", "
				+ "subscribeToAList: " + subscribeToAList
				+ ", "
				+ "subscribeToAListOfScalars: " + subscribeToAListOfScalars
				+ ", "
				+ "issue53: " + issue53
				+ ", "
				+ "allGraphQLCasesInput: " + allGraphQLCasesInput
				+ ", "
				+ "allGraphQLCasesParam: " + allGraphQLCasesParam
				+ ", "
				+ "subscriptionTest: " + subscriptionTest
				+ ", "
				+ "subscriptionWithNullResponse: " + subscriptionWithNullResponse
				+ ", "
				+ "enumWithReservedJavaKeywordAsValues: " + enumWithReservedJavaKeywordAsValues
				+ ", "
				+ "listOfEnumWithReservedJavaKeywordAsValues: " + listOfEnumWithReservedJavaKeywordAsValues
				+ ", "
				+ "_if: " + _if
				+ ", "
				+ "_implements: " + _implements
				+ ", "
				+ "__typename: " + __typename
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private Human subscribeNewHumanForEpisode;
		private List<java.lang.Integer> subscribeToAList;
		private List<java.util.Date> subscribeToAListOfScalars;
		private java.util.Date issue53;
		private AllFieldCases allGraphQLCasesInput;
		private AllFieldCases allGraphQLCasesParam;
		private java.lang.String subscriptionTest;
		private java.lang.String subscriptionWithNullResponse;
		private EnumWithReservedJavaKeywordAsValues enumWithReservedJavaKeywordAsValues;
		private List<EnumWithReservedJavaKeywordAsValues> listOfEnumWithReservedJavaKeywordAsValues;
		private java.lang.String _if;
		private java.lang.String _implements;

		public Builder withSubscribeNewHumanForEpisode(Human subscribeNewHumanForEpisode) {
			this.subscribeNewHumanForEpisode = subscribeNewHumanForEpisode;
			return this;
		}
		public Builder withSubscribeToAList(List<java.lang.Integer> subscribeToAList) {
			this.subscribeToAList = subscribeToAList;
			return this;
		}
		public Builder withSubscribeToAListOfScalars(List<java.util.Date> subscribeToAListOfScalars) {
			this.subscribeToAListOfScalars = subscribeToAListOfScalars;
			return this;
		}
		public Builder withIssue53(java.util.Date issue53) {
			this.issue53 = issue53;
			return this;
		}
		public Builder withAllGraphQLCasesInput(AllFieldCases allGraphQLCasesInput) {
			this.allGraphQLCasesInput = allGraphQLCasesInput;
			return this;
		}
		public Builder withAllGraphQLCasesParam(AllFieldCases allGraphQLCasesParam) {
			this.allGraphQLCasesParam = allGraphQLCasesParam;
			return this;
		}
		public Builder withSubscriptionTest(java.lang.String subscriptionTest) {
			this.subscriptionTest = subscriptionTest;
			return this;
		}
		public Builder withSubscriptionWithNullResponse(java.lang.String subscriptionWithNullResponse) {
			this.subscriptionWithNullResponse = subscriptionWithNullResponse;
			return this;
		}
		public Builder withEnumWithReservedJavaKeywordAsValues(EnumWithReservedJavaKeywordAsValues enumWithReservedJavaKeywordAsValues) {
			this.enumWithReservedJavaKeywordAsValues = enumWithReservedJavaKeywordAsValues;
			return this;
		}
		public Builder withListOfEnumWithReservedJavaKeywordAsValues(List<EnumWithReservedJavaKeywordAsValues> listOfEnumWithReservedJavaKeywordAsValues) {
			this.listOfEnumWithReservedJavaKeywordAsValues = listOfEnumWithReservedJavaKeywordAsValues;
			return this;
		}
		public Builder withIf(java.lang.String _if) {
			this._if = _if;
			return this;
		}
		public Builder withImplements(java.lang.String _implements) {
			this._implements = _implements;
			return this;
		}

		public TheSubscriptionType build() {
			TheSubscriptionType _object = new TheSubscriptionType();
			_object.setSubscribeNewHumanForEpisode(subscribeNewHumanForEpisode);
			_object.setSubscribeToAList(subscribeToAList);
			_object.setSubscribeToAListOfScalars(subscribeToAListOfScalars);
			_object.setIssue53(issue53);
			_object.setAllGraphQLCasesInput(allGraphQLCasesInput);
			_object.setAllGraphQLCasesParam(allGraphQLCasesParam);
			_object.setSubscriptionTest(subscriptionTest);
			_object.setSubscriptionWithNullResponse(subscriptionWithNullResponse);
			_object.setEnumWithReservedJavaKeywordAsValues(enumWithReservedJavaKeywordAsValues);
			_object.setListOfEnumWithReservedJavaKeywordAsValues(listOfEnumWithReservedJavaKeywordAsValues);
			_object.setIf(_if);
			_object.setImplements(_implements);
			_object.set__typename("TheSubscriptionType");
			return _object;
		}
	}
	
	private GraphQLObjectMapper getExtensionMapper() {
		if (extensionMapper == null) {
			extensionMapper = new GraphQLObjectMapper("com.graphql_java_generator.domain.client.allGraphQLCases", null);
		}
		return extensionMapper;
	}
	
	public JsonNode getExtensions() {
		return extensions;
	}
	
	public void setExtensions(JsonNode extensions) {
		this.extensions = extensions;
	}
	
	/**
	 * Returns the extensions as a map. The values can't be deserialized, as their type is unknown.
	 * 
	 * @return
	 */
	public Map<String, JsonNode> getExtensionsAsMap() {
		if (extensionsAsMap == null) {
			extensionsAsMap = getExtensionMapper().convertValue(extensions, new TypeReference<Map<String, JsonNode>>() {
			});
		}
		return extensionsAsMap;
	}
	
	/**
	 * Parse the value for the given _key_, as found in the <I>extensions</I> field of the GraphQL server's response,
	 * into the given _t_ class.
	 * 
	 * @param <T>
	 * @param key
	 * @param t
	 * @return null if the key is not in the <I>extensions</I> map. Otherwise: the value for this _key_, as a _t_
	 *         instance
	 * @throws JsonProcessingException
	 *             When there is an error when converting the key's value into the _t_ class
	 */
	public <T> T getExtensionsField(String key, Class<T> t) throws JsonProcessingException {
		JsonNode node = getExtensionsAsMap().get(key);
		return (node == null) ? null : getExtensionMapper().treeToValue(node, t);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeNewHumanForEpisodeWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<Human> subscriptionCallback,
			Episode episode,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscribeNewHumanForEpisodeWithBindValues(queryResponseDef, subscriptionCallback , episode, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeNewHumanForEpisode(String queryResponseDef, 
			SubscriptionCallback<Human> subscriptionCallback,
			Episode episode,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscribeNewHumanForEpisode(queryResponseDef, subscriptionCallback , episode, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeNewHumanForEpisodeWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<Human> subscriptionCallback,
			Episode episode,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.subscribeNewHumanForEpisodeWithBindValues(objectResponse, subscriptionCallback , episode, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeNewHumanForEpisode(ObjectResponse objectResponse,
			SubscriptionCallback<Human> subscriptionCallback,
			Episode episode,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.subscribeNewHumanForEpisode(objectResponse, subscriptionCallback , episode, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getSubscribeNewHumanForEpisodeResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getSubscribeNewHumanForEpisodeResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getSubscribeNewHumanForEpisodeGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getSubscribeNewHumanForEpisodeGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToAListWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<List<java.lang.Integer>> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscribeToAListWithBindValues(queryResponseDef, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToAList(String queryResponseDef, 
			SubscriptionCallback<List<java.lang.Integer>> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscribeToAList(queryResponseDef, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToAListWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<List<java.lang.Integer>> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.subscribeToAListWithBindValues(objectResponse, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToAList(ObjectResponse objectResponse,
			SubscriptionCallback<List<java.lang.Integer>> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.subscribeToAList(objectResponse, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getSubscribeToAListResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getSubscribeToAListResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getSubscribeToAListGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getSubscribeToAListGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToAListOfScalarsWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<List<java.util.Date>> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscribeToAListOfScalarsWithBindValues(queryResponseDef, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToAListOfScalars(String queryResponseDef, 
			SubscriptionCallback<List<java.util.Date>> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscribeToAListOfScalars(queryResponseDef, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToAListOfScalarsWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<List<java.util.Date>> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.subscribeToAListOfScalarsWithBindValues(objectResponse, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToAListOfScalars(ObjectResponse objectResponse,
			SubscriptionCallback<List<java.util.Date>> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.subscribeToAListOfScalars(objectResponse, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getSubscribeToAListOfScalarsResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getSubscribeToAListOfScalarsResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getSubscribeToAListOfScalarsGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getSubscribeToAListOfScalarsGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient issue53WithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<java.util.Date> subscriptionCallback,
			java.util.Date date,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.issue53WithBindValues(queryResponseDef, subscriptionCallback , date, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient issue53(String queryResponseDef, 
			SubscriptionCallback<java.util.Date> subscriptionCallback,
			java.util.Date date,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.issue53(queryResponseDef, subscriptionCallback , date, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient issue53WithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<java.util.Date> subscriptionCallback,
			java.util.Date date,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.issue53WithBindValues(objectResponse, subscriptionCallback , date, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient issue53(ObjectResponse objectResponse,
			SubscriptionCallback<java.util.Date> subscriptionCallback,
			java.util.Date date,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.issue53(objectResponse, subscriptionCallback , date, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getIssue53ResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getIssue53ResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getIssue53GraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getIssue53GraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient allGraphQLCasesInputWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<AllFieldCases> subscriptionCallback,
			AllFieldCasesInput input,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.allGraphQLCasesInputWithBindValues(queryResponseDef, subscriptionCallback , input, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient allGraphQLCasesInput(String queryResponseDef, 
			SubscriptionCallback<AllFieldCases> subscriptionCallback,
			AllFieldCasesInput input,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.allGraphQLCasesInput(queryResponseDef, subscriptionCallback , input, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient allGraphQLCasesInputWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<AllFieldCases> subscriptionCallback,
			AllFieldCasesInput input,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.allGraphQLCasesInputWithBindValues(objectResponse, subscriptionCallback , input, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient allGraphQLCasesInput(ObjectResponse objectResponse,
			SubscriptionCallback<AllFieldCases> subscriptionCallback,
			AllFieldCasesInput input,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.allGraphQLCasesInput(objectResponse, subscriptionCallback , input, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getAllGraphQLCasesInputResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getAllGraphQLCasesInputResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getAllGraphQLCasesInputGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getAllGraphQLCasesInputGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient allGraphQLCasesParamWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<AllFieldCases> subscriptionCallback,
			java.lang.String id,
			java.lang.String name,
			java.lang.Long age,
			java.lang.Integer integer,
			java.util.Date date,
			List<java.util.Date> dates,
			List<List<java.lang.Double>> matrix,
			AllFieldCasesWithoutIdSubtypeInput oneWithoutIdSubtype,
			List<AllFieldCasesWithoutIdSubtypeInput> listWithoutIdSubtype,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.allGraphQLCasesParamWithBindValues(queryResponseDef, subscriptionCallback , id, name, age, integer, date, dates, matrix, oneWithoutIdSubtype, listWithoutIdSubtype, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient allGraphQLCasesParam(String queryResponseDef, 
			SubscriptionCallback<AllFieldCases> subscriptionCallback,
			java.lang.String id,
			java.lang.String name,
			java.lang.Long age,
			java.lang.Integer integer,
			java.util.Date date,
			List<java.util.Date> dates,
			List<List<java.lang.Double>> matrix,
			AllFieldCasesWithoutIdSubtypeInput oneWithoutIdSubtype,
			List<AllFieldCasesWithoutIdSubtypeInput> listWithoutIdSubtype,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.allGraphQLCasesParam(queryResponseDef, subscriptionCallback , id, name, age, integer, date, dates, matrix, oneWithoutIdSubtype, listWithoutIdSubtype, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient allGraphQLCasesParamWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<AllFieldCases> subscriptionCallback,
			java.lang.String id,
			java.lang.String name,
			java.lang.Long age,
			java.lang.Integer integer,
			java.util.Date date,
			List<java.util.Date> dates,
			List<List<java.lang.Double>> matrix,
			AllFieldCasesWithoutIdSubtypeInput oneWithoutIdSubtype,
			List<AllFieldCasesWithoutIdSubtypeInput> listWithoutIdSubtype,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.allGraphQLCasesParamWithBindValues(objectResponse, subscriptionCallback , id, name, age, integer, date, dates, matrix, oneWithoutIdSubtype, listWithoutIdSubtype, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient allGraphQLCasesParam(ObjectResponse objectResponse,
			SubscriptionCallback<AllFieldCases> subscriptionCallback,
			java.lang.String id,
			java.lang.String name,
			java.lang.Long age,
			java.lang.Integer integer,
			java.util.Date date,
			List<java.util.Date> dates,
			List<List<java.lang.Double>> matrix,
			AllFieldCasesWithoutIdSubtypeInput oneWithoutIdSubtype,
			List<AllFieldCasesWithoutIdSubtypeInput> listWithoutIdSubtype,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.allGraphQLCasesParam(objectResponse, subscriptionCallback , id, name, age, integer, date, dates, matrix, oneWithoutIdSubtype, listWithoutIdSubtype, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getAllGraphQLCasesParamResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getAllGraphQLCasesParamResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getAllGraphQLCasesParamGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getAllGraphQLCasesParamGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscriptionTestWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			SubscriptionTestParam param,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscriptionTestWithBindValues(queryResponseDef, subscriptionCallback , param, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscriptionTest(String queryResponseDef, 
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			SubscriptionTestParam param,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscriptionTest(queryResponseDef, subscriptionCallback , param, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscriptionTestWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			SubscriptionTestParam param,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.subscriptionTestWithBindValues(objectResponse, subscriptionCallback , param, parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscriptionTest(ObjectResponse objectResponse,
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			SubscriptionTestParam param,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.subscriptionTest(objectResponse, subscriptionCallback , param, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getSubscriptionTestResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getSubscriptionTestResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getSubscriptionTestGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getSubscriptionTestGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscriptionWithNullResponseWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscriptionWithNullResponseWithBindValues(queryResponseDef, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscriptionWithNullResponse(String queryResponseDef, 
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscriptionWithNullResponse(queryResponseDef, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscriptionWithNullResponseWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.subscriptionWithNullResponseWithBindValues(objectResponse, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscriptionWithNullResponse(ObjectResponse objectResponse,
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.subscriptionWithNullResponse(objectResponse, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getSubscriptionWithNullResponseResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getSubscriptionWithNullResponseResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getSubscriptionWithNullResponseGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getSubscriptionWithNullResponseGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient enumWithReservedJavaKeywordAsValuesWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<EnumWithReservedJavaKeywordAsValues> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.enumWithReservedJavaKeywordAsValuesWithBindValues(queryResponseDef, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient enumWithReservedJavaKeywordAsValues(String queryResponseDef, 
			SubscriptionCallback<EnumWithReservedJavaKeywordAsValues> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.enumWithReservedJavaKeywordAsValues(queryResponseDef, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient enumWithReservedJavaKeywordAsValuesWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<EnumWithReservedJavaKeywordAsValues> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.enumWithReservedJavaKeywordAsValuesWithBindValues(objectResponse, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient enumWithReservedJavaKeywordAsValues(ObjectResponse objectResponse,
			SubscriptionCallback<EnumWithReservedJavaKeywordAsValues> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.enumWithReservedJavaKeywordAsValues(objectResponse, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getEnumWithReservedJavaKeywordAsValuesResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getEnumWithReservedJavaKeywordAsValuesResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getEnumWithReservedJavaKeywordAsValuesGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getEnumWithReservedJavaKeywordAsValuesGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient listOfEnumWithReservedJavaKeywordAsValuesWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<List<EnumWithReservedJavaKeywordAsValues>> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.listOfEnumWithReservedJavaKeywordAsValuesWithBindValues(queryResponseDef, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient listOfEnumWithReservedJavaKeywordAsValues(String queryResponseDef, 
			SubscriptionCallback<List<EnumWithReservedJavaKeywordAsValues>> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.listOfEnumWithReservedJavaKeywordAsValues(queryResponseDef, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient listOfEnumWithReservedJavaKeywordAsValuesWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<List<EnumWithReservedJavaKeywordAsValues>> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.listOfEnumWithReservedJavaKeywordAsValuesWithBindValues(objectResponse, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient listOfEnumWithReservedJavaKeywordAsValues(ObjectResponse objectResponse,
			SubscriptionCallback<List<EnumWithReservedJavaKeywordAsValues>> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.listOfEnumWithReservedJavaKeywordAsValues(objectResponse, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getListOfEnumWithReservedJavaKeywordAsValuesResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getListOfEnumWithReservedJavaKeywordAsValuesResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getListOfEnumWithReservedJavaKeywordAsValuesGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getListOfEnumWithReservedJavaKeywordAsValuesGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient _ifWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super._ifWithBindValues(queryResponseDef, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient _if(String queryResponseDef, 
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super._if(queryResponseDef, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient _ifWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super._ifWithBindValues(objectResponse, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient _if(ObjectResponse objectResponse,
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super._if(objectResponse, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getIfResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getIfResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getIfGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getIfGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient _implementsWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super._implementsWithBindValues(queryResponseDef, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient _implements(String queryResponseDef, 
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super._implements(queryResponseDef, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient _implementsWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super._implementsWithBindValues(objectResponse, subscriptionCallback , parameters);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient _implements(ObjectResponse objectResponse,
			SubscriptionCallback<java.lang.String> subscriptionCallback,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super._implements(objectResponse, subscriptionCallback , paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getImplementsResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getImplementsResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link TheSubscriptionTypeExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getImplementsGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getImplementsGraphQLRequest(partialRequest);
	}
	
}
