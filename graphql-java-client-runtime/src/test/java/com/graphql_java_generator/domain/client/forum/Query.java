  /** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.client.forum;

import java.util.HashMap;
import java.util.Map;


import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLQuery;
import com.graphql_java_generator.annotation.GraphQLScalar;
import com.graphql_java_generator.exception.GraphQLRequestExecutionException;
import com.graphql_java_generator.exception.GraphQLRequestPreparationException;
import com.graphql_java_generator.client.GraphQLObjectMapper;
import com.graphql_java_generator.client.request.InputParameter;
import com.graphql_java_generator.client.request.ObjectResponse;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.RequestType;
import java.util.List;

import com.graphql_java_generator.client.GraphqlClientUtils;

/**
 * This class contains the response for a full request. See the 
 * <A HREF="https://graphql-maven-plugin-project.graphql-java-generator.com/exec_graphql_requests.html">plugin web site</A> 
 * for more information on full and partial requests.<BR/>
 * It also allows access to the _extensions_ part of the response. Take a look at the 
 * <A HRE="https://spec.graphql.org/June2018/#sec-Response">GraphQL spec</A> for more information on this.
 * 
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLQuery(name = "Query", type = RequestType.query)
@GraphQLObjectType("Query")
@SuppressWarnings("unused")
public class Query extends QueryExecutorMySchema implements com.graphql_java_generator.client.GraphQLRequestObject {

	private GraphQLObjectMapper extensionMapper = null;
	private JsonNode extensions;
	private Map<String, JsonNode> extensionsAsMap = null;



	/**
	 * This map contains the deserialized values for the alias, as parsed from the json response from the GraphQL
	 * server. The key is the alias name, the value is the deserialiazed value (taking into account custom scalars,
	 * lists, ...)
	 */
	@com.graphql_java_generator.annotation.GraphQLIgnore
	Map<String, Object> aliasValues = new HashMap<>();

	public Query(){
		// No action
	}

	@JsonProperty("boards")
	@JsonDeserialize(using = CustomJacksonDeserializers.ListBoard.class)
	@GraphQLNonScalar(fieldName = "boards", graphQLTypeSimpleName = "Board", javaClass = Board.class)
	List<Board> boards;


	@JsonProperty("nbBoards")
	@GraphQLScalar(fieldName = "nbBoards", graphQLTypeSimpleName = "Int", javaClass = java.lang.Integer.class)
	java.lang.Integer nbBoards;


	@JsonProperty("topics")
	@JsonDeserialize(using = CustomJacksonDeserializers.ListTopic.class)
	@GraphQLInputParameters(names = {"boardName"}, types = {"String"}, mandatories = {true}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLNonScalar(fieldName = "topics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	List<Topic> topics;


	@JsonProperty("findTopics")
	@JsonDeserialize(using = CustomJacksonDeserializers.ListTopic.class)
	@GraphQLInputParameters(names = {"boardName", "keyword"}, types = {"String", "String"}, mandatories = {true, false}, listDepths = {0, 1}, itemsMandatory = {false, true})
	@GraphQLNonScalar(fieldName = "findTopics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	List<Topic> findTopics;


	@JsonProperty("__schema")
	@GraphQLNonScalar(fieldName = "__schema", graphQLTypeSimpleName = "__Schema", javaClass = __Schema.class)
	__Schema __schema;


	@JsonProperty("__type")
	@GraphQLInputParameters(names = {"name"}, types = {"String"}, mandatories = {true}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLNonScalar(fieldName = "__type", graphQLTypeSimpleName = "__Type", javaClass = __Type.class)
	__Type __type;


	@JsonProperty("__typename")
	@GraphQLScalar(fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String __typename;



	public void setBoards(List<Board> boards) {
		this.boards = boards;
	}

	public List<Board> getBoards() {
		return boards;
	}
		

	public void setNbBoards(java.lang.Integer nbBoards) {
		this.nbBoards = nbBoards;
	}

	public java.lang.Integer getNbBoards() {
		return nbBoards;
	}
		

	public void setTopics(List<Topic> topics) {
		this.topics = topics;
	}

	public List<Topic> getTopics() {
		return topics;
	}
		

	public void setFindTopics(List<Topic> findTopics) {
		this.findTopics = findTopics;
	}

	public List<Topic> getFindTopics() {
		return findTopics;
	}
		

	public void set__schema(__Schema __schema) {
		this.__schema = __schema;
	}

	public __Schema get__schema() {
		return __schema;
	}
		

	public void set__type(__Type __type) {
		this.__type = __type;
	}

	public __Type get__type() {
		return __type;
	}
		

	public void set__typename(java.lang.String __typename) {
		this.__typename = __typename;
	}

	public java.lang.String get__typename() {
		return __typename;
	}
		

 
	/**
	 * This method is called during the json deserialization process, by the {@link GraphQLObjectMapper}, each time an
	 * alias value is read from the json.
	 * 
	 * @param aliasName
	 * @param aliasDeserializedValue
	 */
	public void setAliasValue(String aliasName, Object aliasDeserializedValue) {
		aliasValues.put(aliasName, aliasDeserializedValue);
	}

	/**
	 * Retrieves the value for the given alias, as it has been received for this object in the GraphQL response. <BR/>
	 * This method <B>should not be used for Custom Scalars</B>, as the parser doesn't know if this alias is a custom
	 * scalar, and which custom scalar to use at deserialization time. In most case, a value will then be provided by
	 * this method with a basis json deserialization, but this value won't be the proper custom scalar value.
	 * 
	 * @param alias
	 * @return
	 */
	public Object getAliasValue(String alias) {
		return aliasValues.get(alias);
	}

    public String toString() {
        return "Query {"
				+ "boards: " + boards
				+ ", "
				+ "nbBoards: " + nbBoards
				+ ", "
				+ "topics: " + topics
				+ ", "
				+ "findTopics: " + findTopics
				+ ", "
				+ "__schema: " + __schema
				+ ", "
				+ "__type: " + __type
				+ ", "
				+ "__typename: " + __typename
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private List<Board> boards;
		private java.lang.Integer nbBoards;
		private List<Topic> topics;
		private List<Topic> findTopics;
		private __Schema __schema;
		private __Type __type;

		public Builder withBoards(List<Board> boards) {
			this.boards = boards;
			return this;
		}
		public Builder withNbBoards(java.lang.Integer nbBoards) {
			this.nbBoards = nbBoards;
			return this;
		}
		public Builder withTopics(List<Topic> topics) {
			this.topics = topics;
			return this;
		}
		public Builder withFindTopics(List<Topic> findTopics) {
			this.findTopics = findTopics;
			return this;
		}
		public Builder with__schema(__Schema __schema) {
			this.__schema = __schema;
			return this;
		}
		public Builder with__type(__Type __type) {
			this.__type = __type;
			return this;
		}

		public Query build() {
			Query _object = new Query();
			_object.setBoards(boards);
			_object.setNbBoards(nbBoards);
			_object.setTopics(topics);
			_object.setFindTopics(findTopics);
			_object.set__schema(__schema);
			_object.set__type(__type);
			_object.set__typename("Query");
			return _object;
		}
	}

	private GraphQLObjectMapper getExtensionMapper() {
		if (extensionMapper == null) {
			extensionMapper = new GraphQLObjectMapper("org.graphql.mavenplugin.junittest.forum_client_springconfiguration", null);
		}
		return extensionMapper;
	}
	
	public JsonNode getExtensions() {
		return extensions;
	}
	
	public void setExtensions(JsonNode extensions) {
		this.extensions = extensions;
	}
	
	/**
	 * Returns the extensions as a map. The values can't be deserialized, as their type is unknown.
	 * 
	 * @return
	 */
	public Map<String, JsonNode> getExtensionsAsMap() {
		if (extensionsAsMap == null) {
			extensionsAsMap = getExtensionMapper().convertValue(extensions, new TypeReference<Map<String, JsonNode>>() {
			});
		}
		return extensionsAsMap;
	}
	
	/**
	 * Parse the value for the given _key_, as found in the <I>extensions</I> field of the GraphQL server's response,
	 * into the given _t_ class.
	 * 
	 * @param <T>
	 * @param key
	 * @param t
	 * @return null if the key is not in the <I>extensions</I> map. Otherwise: the value for this _key_, as a _t_
	 *         instance
	 * @throws JsonProcessingException
	 *             When there is an error when converting the key's value into the _t_ class
	 */
	public <T> T getExtensionsField(String key, Class<T> t) throws JsonProcessingException {
		JsonNode node = getExtensionsAsMap().get(key);
		return (node == null) ? null : getExtensionMapper().treeToValue(node, t);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public QueryResponse execWithBindValues(String queryResponseDef, Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.exec(queryResponseDef, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public QueryResponse exec(String queryResponseDef, Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.exec(queryResponseDef, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public QueryResponse execWithBindValues(ObjectResponse objectResponse, Map<String, Object> parameters)
			throws GraphQLRequestExecutionException {
		return super.execWithBindValues(objectResponse, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public QueryResponse exec(ObjectResponse objectResponse, Object... paramsAndValues)
			throws GraphQLRequestExecutionException {
		return super.exec(objectResponse, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getResponseBuilder();
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getGraphQLRequest(String fullRequest) throws GraphQLRequestPreparationException {
		return super.getGraphQLRequest(fullRequest);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "boards", graphQLTypeSimpleName = "Board", javaClass = Board.class)
	public List<Board> boardsWithBindValues(
			String queryResponseDef,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.boardsWithBindValues(queryResponseDef, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "boards", graphQLTypeSimpleName = "Board", javaClass = Board.class)
	public List<Board> boards(
			String queryResponseDef,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.boards(queryResponseDef, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "boards", graphQLTypeSimpleName = "Board", javaClass = Board.class)
	public List<Board> boardsWithBindValues(
			ObjectResponse objectResponse,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.boardsWithBindValues(objectResponse, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "boards", graphQLTypeSimpleName = "Board", javaClass = Board.class)
	public List<Board> boards(
			ObjectResponse objectResponse,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.boards(objectResponse, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getBoardsResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getBoardsResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getBoardsGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getBoardsGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "nbBoards", graphQLTypeSimpleName = "Int", javaClass = java.lang.Integer.class)
	public java.lang.Integer nbBoardsWithBindValues(
			String queryResponseDef,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.nbBoardsWithBindValues(queryResponseDef, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "nbBoards", graphQLTypeSimpleName = "Int", javaClass = java.lang.Integer.class)
	public java.lang.Integer nbBoards(
			String queryResponseDef,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.nbBoards(queryResponseDef, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "nbBoards", graphQLTypeSimpleName = "Int", javaClass = java.lang.Integer.class)
	public java.lang.Integer nbBoardsWithBindValues(
			ObjectResponse objectResponse,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.nbBoardsWithBindValues(objectResponse, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "nbBoards", graphQLTypeSimpleName = "Int", javaClass = java.lang.Integer.class)
	public java.lang.Integer nbBoards(
			ObjectResponse objectResponse,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.nbBoards(objectResponse, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getNbBoardsResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getNbBoardsResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getNbBoardsGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getNbBoardsGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "topics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	public List<Topic> topicsWithBindValues(
			String queryResponseDef,
			java.lang.String boardName,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.topicsWithBindValues(queryResponseDef, boardName, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "topics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	public List<Topic> topics(
			String queryResponseDef,
			java.lang.String boardName,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.topics(queryResponseDef, boardName, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "topics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	public List<Topic> topicsWithBindValues(
			ObjectResponse objectResponse,
			java.lang.String boardName,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.topicsWithBindValues(objectResponse, boardName, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "topics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	public List<Topic> topics(
			ObjectResponse objectResponse,
			java.lang.String boardName,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.topics(objectResponse, boardName, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getTopicsResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getTopicsResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getTopicsGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getTopicsGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "findTopics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	public List<Topic> findTopicsWithBindValues(
			String queryResponseDef,
			java.lang.String boardName,
			List<java.lang.String> keyword,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.findTopicsWithBindValues(queryResponseDef, boardName, keyword, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "findTopics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	public List<Topic> findTopics(
			String queryResponseDef,
			java.lang.String boardName,
			List<java.lang.String> keyword,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.findTopics(queryResponseDef, boardName, keyword, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "findTopics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	public List<Topic> findTopicsWithBindValues(
			ObjectResponse objectResponse,
			java.lang.String boardName,
			List<java.lang.String> keyword,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.findTopicsWithBindValues(objectResponse, boardName, keyword, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "findTopics", graphQLTypeSimpleName = "Topic", javaClass = Topic.class)
	public List<Topic> findTopics(
			ObjectResponse objectResponse,
			java.lang.String boardName,
			List<java.lang.String> keyword,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.findTopics(objectResponse, boardName, keyword, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getFindTopicsResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getFindTopicsResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getFindTopicsGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getFindTopicsGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "__schema", graphQLTypeSimpleName = "__Schema", javaClass = __Schema.class)
	public __Schema __schemaWithBindValues(
			String queryResponseDef,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.__schemaWithBindValues(queryResponseDef, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "__schema", graphQLTypeSimpleName = "__Schema", javaClass = __Schema.class)
	public __Schema __schema(
			String queryResponseDef,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.__schema(queryResponseDef, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "__schema", graphQLTypeSimpleName = "__Schema", javaClass = __Schema.class)
	public __Schema __schemaWithBindValues(
			ObjectResponse objectResponse,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.__schemaWithBindValues(objectResponse, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "__schema", graphQLTypeSimpleName = "__Schema", javaClass = __Schema.class)
	public __Schema __schema(
			ObjectResponse objectResponse,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.__schema(objectResponse, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder get__schemaResponseBuilder() throws GraphQLRequestPreparationException {
		return super.get__schemaResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest get__schemaGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.get__schemaGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "__type", graphQLTypeSimpleName = "__Type", javaClass = __Type.class)
	public __Type __typeWithBindValues(
			String queryResponseDef,
			java.lang.String name,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.__typeWithBindValues(queryResponseDef, name, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "__type", graphQLTypeSimpleName = "__Type", javaClass = __Type.class)
	public __Type __type(
			String queryResponseDef,
			java.lang.String name,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.__type(queryResponseDef, name, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "__type", graphQLTypeSimpleName = "__Type", javaClass = __Type.class)
	public __Type __typeWithBindValues(
			ObjectResponse objectResponse,
			java.lang.String name,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.__typeWithBindValues(objectResponse, name, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLNonScalar (fieldName = "__type", graphQLTypeSimpleName = "__Type", javaClass = __Type.class)
	public __Type __type(
			ObjectResponse objectResponse,
			java.lang.String name,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.__type(objectResponse, name, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder get__typeResponseBuilder() throws GraphQLRequestPreparationException {
		return super.get__typeResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest get__typeGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.get__typeGraphQLRequest(partialRequest);
	}
	
	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String __typenameWithBindValues(
			String queryResponseDef,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.__typenameWithBindValues(queryResponseDef, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String __typename(
			String queryResponseDef,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.__typename(queryResponseDef, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String __typenameWithBindValues(
			ObjectResponse objectResponse,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.__typenameWithBindValues(objectResponse, parameters);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	@GraphQLScalar (fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	public java.lang.String __typename(
			ObjectResponse objectResponse,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.__typename(objectResponse, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder get__typenameResponseBuilder() throws GraphQLRequestPreparationException {
		return super.get__typenameResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link QueryExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest get__typenameGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.get__typenameGraphQLRequest(partialRequest);
	}
	
}
