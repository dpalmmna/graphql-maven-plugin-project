  /** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.client.forum;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLQuery;
import com.graphql_java_generator.annotation.GraphQLScalar;
import com.graphql_java_generator.exception.GraphQLRequestExecutionException;
import com.graphql_java_generator.exception.GraphQLRequestPreparationException;
import com.graphql_java_generator.client.GraphQLObjectMapper;
import com.graphql_java_generator.client.request.InputParameter;
import com.graphql_java_generator.client.request.ObjectResponse;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.RequestType;

import com.graphql_java_generator.client.GraphqlClientUtils;
import com.graphql_java_generator.client.SubscriptionCallback;
import com.graphql_java_generator.client.SubscriptionClient;

/**
 * This class contains the response for a full request. See the 
 * <A HREF="https://graphql-maven-plugin-project.graphql-java-generator.com/client_subscription.html">plugin web site</A> 
 * for more information on full and partial requests.<BR/>
 * It also allows access to the _extensions_ part of the response. Take a look at the 
 * <A HRE="https://spec.graphql.org/June2018/#sec-Response">GraphQL spec</A> for more information on this.
 * 
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLQuery(name = "Subscription", type = RequestType.subscription)
@GraphQLObjectType("Subscription")
@SuppressWarnings("unused")
public class Subscription extends SubscriptionExecutorMySchema implements com.graphql_java_generator.client.GraphQLRequestObject {

	private GraphQLObjectMapper extensionMapper = null;
	private JsonNode extensions;
	private Map<String, JsonNode> extensionsAsMap = null;



	/**
	 * This map contains the deserialized values for the alias, as parsed from the json response from the GraphQL
	 * server. The key is the alias name, the value is the deserialiazed value (taking into account custom scalars,
	 * lists, ...)
	 */
	@com.graphql_java_generator.annotation.GraphQLIgnore
	Map<String, Object> aliasValues = new HashMap<>();

	public Subscription(){
		// No action
	}

	@JsonProperty("subscribeToNewPost")
	@GraphQLInputParameters(names = {"boardName"}, types = {"String"}, mandatories = {true}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLNonScalar(fieldName = "subscribeToNewPost", graphQLTypeSimpleName = "Post", javaClass = Post.class)
	Post subscribeToNewPost;


	@JsonProperty("__typename")
	@GraphQLScalar(fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String __typename;



	public void setSubscribeToNewPost(Post subscribeToNewPost) {
		this.subscribeToNewPost = subscribeToNewPost;
	}

	public Post getSubscribeToNewPost() {
		return subscribeToNewPost;
	}
		

	public void set__typename(java.lang.String __typename) {
		this.__typename = __typename;
	}

	public java.lang.String get__typename() {
		return __typename;
	}
		

 
	/**
	 * This method is called during the json deserialization process, by the {@link GraphQLObjectMapper}, each time an
	 * alias value is read from the json.
	 * 
	 * @param aliasName
	 * @param aliasDeserializedValue
	 */
	public void setAliasValue(String aliasName, Object aliasDeserializedValue) {
		aliasValues.put(aliasName, aliasDeserializedValue);
	}

	/**
	 * Retrieves the value for the given alias, as it has been received for this object in the GraphQL response. <BR/>
	 * This method <B>should not be used for Custom Scalars</B>, as the parser doesn't know if this alias is a custom
	 * scalar, and which custom scalar to use at deserialization time. In most case, a value will then be provided by
	 * this method with a basis json deserialization, but this value won't be the proper custom scalar value.
	 * 
	 * @param alias
	 * @return
	 */
	public Object getAliasValue(String alias) {
		return aliasValues.get(alias);
	}

    public String toString() {
        return "Subscription {"
				+ "subscribeToNewPost: " + subscribeToNewPost
				+ ", "
				+ "__typename: " + __typename
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private Post subscribeToNewPost;

		public Builder withSubscribeToNewPost(Post subscribeToNewPost) {
			this.subscribeToNewPost = subscribeToNewPost;
			return this;
		}

		public Subscription build() {
			Subscription _object = new Subscription();
			_object.setSubscribeToNewPost(subscribeToNewPost);
			_object.set__typename("Subscription");
			return _object;
		}
	}
	
	private GraphQLObjectMapper getExtensionMapper() {
		if (extensionMapper == null) {
			extensionMapper = new GraphQLObjectMapper("org.graphql.mavenplugin.junittest.forum_client_springconfiguration", null);
		}
		return extensionMapper;
	}
	
	public JsonNode getExtensions() {
		return extensions;
	}
	
	public void setExtensions(JsonNode extensions) {
		this.extensions = extensions;
	}
	
	/**
	 * Returns the extensions as a map. The values can't be deserialized, as their type is unknown.
	 * 
	 * @return
	 */
	public Map<String, JsonNode> getExtensionsAsMap() {
		if (extensionsAsMap == null) {
			extensionsAsMap = getExtensionMapper().convertValue(extensions, new TypeReference<Map<String, JsonNode>>() {
			});
		}
		return extensionsAsMap;
	}
	
	/**
	 * Parse the value for the given _key_, as found in the <I>extensions</I> field of the GraphQL server's response,
	 * into the given _t_ class.
	 * 
	 * @param <T>
	 * @param key
	 * @param t
	 * @return null if the key is not in the <I>extensions</I> map. Otherwise: the value for this _key_, as a _t_
	 *         instance
	 * @throws JsonProcessingException
	 *             When there is an error when converting the key's value into the _t_ class
	 */
	public <T> T getExtensionsField(String key, Class<T> t) throws JsonProcessingException {
		JsonNode node = getExtensionsAsMap().get(key);
		return (node == null) ? null : getExtensionMapper().treeToValue(node, t);
	}

	/**
	 * This method is deprecated: please use {@link SubscriptionExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToNewPostWithBindValues(
			String queryResponseDef, 
			SubscriptionCallback<Post> subscriptionCallback,
			java.lang.String boardName,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscribeToNewPostWithBindValues(queryResponseDef, subscriptionCallback , boardName, parameters);
	}

	/**
	 * This method is deprecated: please use {@link SubscriptionExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToNewPost(String queryResponseDef, 
			SubscriptionCallback<Post> subscriptionCallback,
			java.lang.String boardName,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException, GraphQLRequestPreparationException {
		return super.subscribeToNewPost(queryResponseDef, subscriptionCallback , boardName, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link SubscriptionExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToNewPostWithBindValues(ObjectResponse objectResponse,
			SubscriptionCallback<Post> subscriptionCallback,
			java.lang.String boardName,
			Map<String, Object> parameters)
			throws GraphQLRequestExecutionException  {
		return super.subscribeToNewPostWithBindValues(objectResponse, subscriptionCallback , boardName, parameters);
	}

	/**
	 * This method is deprecated: please use {@link SubscriptionExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public SubscriptionClient subscribeToNewPost(ObjectResponse objectResponse,
			SubscriptionCallback<Post> subscriptionCallback,
			java.lang.String boardName,
			Object... paramsAndValues)
			throws GraphQLRequestExecutionException  {
		return super.subscribeToNewPost(objectResponse, subscriptionCallback , boardName, paramsAndValues);
	}

	/**
	 * This method is deprecated: please use {@link SubscriptionExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public com.graphql_java_generator.client.request.Builder getSubscribeToNewPostResponseBuilder() throws GraphQLRequestPreparationException {
		return super.getSubscribeToNewPostResponseBuilder();
	}


	/**
	 * This method is deprecated: please use {@link SubscriptionExecutor} class instead of this class, to execute this method. 
	 * It is maintained to keep existing code compatible with the generated code. It will be removed in 2.0 version.
	 */
	@Deprecated
	public GraphQLRequest getSubscribeToNewPostGraphQLRequest(String partialRequest) throws GraphQLRequestPreparationException {
		return super.getSubscribeToNewPostGraphQLRequest(partialRequest);
	}
	
}
