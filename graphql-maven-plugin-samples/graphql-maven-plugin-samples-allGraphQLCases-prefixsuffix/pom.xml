<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.graphql-java-generator</groupId>
		<artifactId>graphql-maven-plugin-samples</artifactId>
		<version>local-SNAPSHOT</version>
	</parent>
    <description>
        This maven project validates that configured prefixes and suffixes are used correctly in code generation.
    </description>

	<artifactId>graphql-maven-plugin-samples-allGraphQLCases-prefixsuffix</artifactId>

	<build>
		<plugins>
			<plugin>
				<groupId>com.graphql-java-generator</groupId>
				<artifactId>graphql-maven-plugin</artifactId>
				<executions>
                    <execution>
                        <id>graphql-generateClientCode with prefixes and suffixes</id>
                        <goals>
                            <goal>generateClientCode</goal>
                        </goals>
                        <configuration>
                            <addRelayConnections>true</addRelayConnections>
                            <copyRuntimeSources>false</copyRuntimeSources>
                            <packageName>org.allGraphQLCases.client.prefixsuffix</packageName>
                            <schemaFileFolder>../graphql-maven-plugin-samples-allGraphQLCases-client/src/graphqls/allGraphQLCases</schemaFileFolder>
                            <targetSourceFolder>${basedir}/target/generated-sources/graphql-maven-plugin-prefix-suffix/client</targetSourceFolder>
                            <separateUtilityClasses>true</separateUtilityClasses>
                            <skipGenerationIfSchemaHasNotChanged>true</skipGenerationIfSchemaHasNotChanged>
                            <customScalars>
                                <customScalar>
                                    <graphQLTypeName>Date</graphQLTypeName>
                                    <javaType>java.util.Date</javaType>
                                    <graphQLScalarTypeStaticField>com.graphql_java_generator.customscalars.GraphQLScalarTypeDate.Date</graphQLScalarTypeStaticField>
                                </customScalar>
                                <customScalar>
                                    <graphQLTypeName>DateTime</graphQLTypeName>
                                    <javaType>java.time.OffsetDateTime</javaType>
                                    <graphQLScalarTypeStaticField>graphql.scalars.ExtendedScalars.DateTime</graphQLScalarTypeStaticField>
                                </customScalar>
                                <customScalar>
                                    <graphQLTypeName>else</graphQLTypeName>
                                    <javaType>java.lang.String</javaType>
                                    <graphQLScalarTypeGetter>org.allGraphQLCases.prefixsuffix.impl.GraphQLScalarTypeElse.getElseScalar()</graphQLScalarTypeGetter>
                                </customScalar>
                                <customScalar>
                                    <graphQLTypeName>Long</graphQLTypeName>
                                    <javaType>java.lang.Long</javaType>
                                    <graphQLScalarTypeStaticField>graphql.scalars.ExtendedScalars.GraphQLLong</graphQLScalarTypeStaticField>
                                </customScalar>
                                <customScalar>
                                    <graphQLTypeName>NonNegativeInt</graphQLTypeName>
                                    <javaType>java.lang.Integer</javaType>
                                    <graphQLScalarTypeStaticField>graphql.scalars.ExtendedScalars.NonNegativeInt</graphQLScalarTypeStaticField>
                                </customScalar>
                            </customScalars>
                            <!-- generate code with prefixes and suffixes -->
                            <inputPrefix>InputPrefix</inputPrefix>
                            <inputSuffix>InputSuffix</inputSuffix>
                            <typePrefix>TypePrefix</typePrefix>
                            <typeSuffix>TypeSuffix</typeSuffix>
                            <interfacePrefix>InterfacePrefix</interfacePrefix>
                            <interfaceSuffix>InterfaceSuffix</interfaceSuffix>
                            <enumPrefix>EnumPrefix</enumPrefix>
                            <enumSuffix>EnumSuffix</enumSuffix>
                            <unionPrefix>UnionPrefix</unionPrefix>
                            <unionSuffix>UnionSuffix</unionSuffix>
                        </configuration>
                    </execution>
                    <execution>
                        <id>graphql-generateServerCode with prefixes and suffixes</id>
                        <goals>
                            <goal>generateServerCode</goal>
                        </goals>
                        <configuration>
                            <addRelayConnections>true</addRelayConnections>
                            <copyRuntimeSources>false</copyRuntimeSources>
                            <generateBatchLoaderEnvironment>true</generateBatchLoaderEnvironment>
                            <packageName>org.allGraphQLCases.server.prefixsuffix</packageName>
                            <schemaFileFolder>../graphql-maven-plugin-samples-allGraphQLCases-client/src/graphqls/allGraphQLCases</schemaFileFolder>
                            <targetSourceFolder>${basedir}/target/generated-sources/graphql-maven-plugin-prefix-suffix/server</targetSourceFolder>
                            <separateUtilityClasses>true</separateUtilityClasses>
                            <skipGenerationIfSchemaHasNotChanged>true</skipGenerationIfSchemaHasNotChanged>
                            <customScalars>
                                <customScalar>
                                    <graphQLTypeName>Date</graphQLTypeName>
                                    <javaType>java.util.Date</javaType>
                                    <graphQLScalarTypeStaticField>com.graphql_java_generator.customscalars.GraphQLScalarTypeDate.Date</graphQLScalarTypeStaticField>
                                </customScalar>
                                <customScalar>
                                    <graphQLTypeName>DateTime</graphQLTypeName>
                                    <javaType>java.time.OffsetDateTime</javaType>
                                    <graphQLScalarTypeStaticField>graphql.scalars.ExtendedScalars.DateTime</graphQLScalarTypeStaticField>
                                </customScalar>
                                <customScalar>
                                    <graphQLTypeName>else</graphQLTypeName>
                                    <javaType>java.lang.String</javaType>
                                    <graphQLScalarTypeGetter>org.allGraphQLCases.prefixsuffix.impl.GraphQLScalarTypeElse.getElseScalar()</graphQLScalarTypeGetter>
                                </customScalar>
                                <customScalar>
                                    <graphQLTypeName>Long</graphQLTypeName>
                                    <javaType>java.lang.Long</javaType>
                                    <graphQLScalarTypeStaticField>graphql.scalars.ExtendedScalars.GraphQLLong</graphQLScalarTypeStaticField>
                                </customScalar>
                                <customScalar>
                                    <graphQLTypeName>NonNegativeInt</graphQLTypeName>
                                    <javaType>java.lang.Integer</javaType>
                                    <graphQLScalarTypeStaticField>graphql.scalars.ExtendedScalars.NonNegativeInt</graphQLScalarTypeStaticField>
                                </customScalar>
                            </customScalars>
                            <!-- generate code with prefixes and suffixes -->
                            <inputPrefix>InputPrefix</inputPrefix>
                            <inputSuffix>InputSuffix</inputSuffix>
                            <typePrefix>TypePrefix</typePrefix>
                            <typeSuffix>TypeSuffix</typeSuffix>
                            <interfacePrefix>InterfacePrefix</interfacePrefix>
                            <interfaceSuffix>InterfaceSuffix</interfaceSuffix>
                            <enumPrefix>EnumPrefix</enumPrefix>
                            <enumSuffix>EnumSuffix</enumSuffix>
                            <unionPrefix>UnionPrefix</unionPrefix>
                            <unionSuffix>UnionSuffix</unionSuffix>
                        </configuration>
                    </execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/graphql-maven-plugin-prefix-suffix</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- We don't want to spam the repository with test/sample artefacts -->
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- Dependencies for the generated code -->
		<dependency>
			<groupId>com.graphql-java-generator</groupId>
			<artifactId>graphql-java-client-runtime</artifactId>
		</dependency>
        <dependency>
            <groupId>com.graphql-java-generator</groupId>
            <artifactId>graphql-java-server-runtime</artifactId>
        </dependency>

        <!-- Complementary graphql dependencies, for the custom scalars -->
		<dependency>
			<groupId>com.graphql-java</groupId>
			<artifactId>graphql-java-extended-scalars</artifactId>
		</dependency>

		<!-- Dependencies for tests -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-websocket</artifactId>
        </dependency>
    </dependencies>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<reportSets>
					<reportSet>
						<id>non-aggregate</id>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<source>8</source>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

</project>