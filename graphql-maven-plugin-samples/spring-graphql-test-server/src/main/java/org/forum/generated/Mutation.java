/** Generated by the default template from graphql-java-generator */
package org.forum.generated;

import java.util.HashMap;
import java.util.Map;


import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import java.util.List;
import javax.persistence.Transient;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Mutation")
@SuppressWarnings("unused")
public class Mutation 
{

	public Mutation(){
		// No action
	}

	@GraphQLNonScalar(fieldName = "createBoard", graphQLTypeSimpleName = "Board", javaClass = org.forum.generated.Board.class)
	org.forum.generated.Board createBoard;


	@GraphQLNonScalar(fieldName = "createTopic", graphQLTypeSimpleName = "Topic", javaClass = org.forum.generated.Topic.class)
	org.forum.generated.Topic createTopic;


	@GraphQLNonScalar(fieldName = "createPost", graphQLTypeSimpleName = "Post", javaClass = org.forum.generated.Post.class)
	org.forum.generated.Post createPost;


	@Transient
	@GraphQLNonScalar(fieldName = "createPosts", graphQLTypeSimpleName = "Post", javaClass = org.forum.generated.Post.class)
	List<org.forum.generated.Post> createPosts;


	@GraphQLNonScalar(fieldName = "createMember", graphQLTypeSimpleName = "Member", javaClass = org.forum.generated.Member.class)
	org.forum.generated.Member createMember;



	public void setCreateBoard(org.forum.generated.Board createBoard) {
		this.createBoard = createBoard;
	}

	public org.forum.generated.Board getCreateBoard() {
		return createBoard;
	}
		

	public void setCreateTopic(org.forum.generated.Topic createTopic) {
		this.createTopic = createTopic;
	}

	public org.forum.generated.Topic getCreateTopic() {
		return createTopic;
	}
		

	public void setCreatePost(org.forum.generated.Post createPost) {
		this.createPost = createPost;
	}

	public org.forum.generated.Post getCreatePost() {
		return createPost;
	}
		

	public void setCreatePosts(List<org.forum.generated.Post> createPosts) {
		this.createPosts = createPosts;
	}

	public List<org.forum.generated.Post> getCreatePosts() {
		return createPosts;
	}
		

	public void setCreateMember(org.forum.generated.Member createMember) {
		this.createMember = createMember;
	}

	public org.forum.generated.Member getCreateMember() {
		return createMember;
	}
		

     public String toString() {
        return "Mutation {"
				+ "createBoard: " + createBoard
				+ ", "
				+ "createTopic: " + createTopic
				+ ", "
				+ "createPost: " + createPost
				+ ", "
				+ "createPosts: " + createPosts
				+ ", "
				+ "createMember: " + createMember
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private org.forum.generated.Board createBoard;
		private org.forum.generated.Topic createTopic;
		private org.forum.generated.Post createPost;
		private List<org.forum.generated.Post> createPosts;
		private org.forum.generated.Member createMember;

		public Builder withCreateBoard(org.forum.generated.Board createBoard) {
			this.createBoard = createBoard;
			return this;
		}
		public Builder withCreateTopic(org.forum.generated.Topic createTopic) {
			this.createTopic = createTopic;
			return this;
		}
		public Builder withCreatePost(org.forum.generated.Post createPost) {
			this.createPost = createPost;
			return this;
		}
		public Builder withCreatePosts(List<org.forum.generated.Post> createPosts) {
			this.createPosts = createPosts;
			return this;
		}
		public Builder withCreateMember(org.forum.generated.Member createMember) {
			this.createMember = createMember;
			return this;
		}

		public Mutation build() {
			Mutation _object = new Mutation();
			_object.setCreateBoard(createBoard);
			_object.setCreateTopic(createTopic);
			_object.setCreatePost(createPost);
			_object.setCreatePosts(createPosts);
			_object.setCreateMember(createMember);
			return _object;
		}
	}
}
