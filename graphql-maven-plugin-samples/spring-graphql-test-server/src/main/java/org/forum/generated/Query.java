/** Generated by the default template from graphql-java-generator */
package org.forum.generated;

import java.util.HashMap;
import java.util.Map;


import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;
import javax.persistence.Transient;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("Query")
@SuppressWarnings("unused")
public class Query 
{

	public Query(){
		// No action
	}

	@Transient
	@GraphQLNonScalar(fieldName = "boards", graphQLTypeSimpleName = "Board", javaClass = org.forum.generated.Board.class)
	List<org.forum.generated.Board> boards;


	@GraphQLScalar(fieldName = "nbBoards", graphQLTypeSimpleName = "Int", javaClass = java.lang.Integer.class)
	java.lang.Integer nbBoards;


	@Transient
	@GraphQLNonScalar(fieldName = "topics", graphQLTypeSimpleName = "Topic", javaClass = org.forum.generated.Topic.class)
	List<org.forum.generated.Topic> topics;


	@Transient
	@GraphQLNonScalar(fieldName = "findTopics", graphQLTypeSimpleName = "Topic", javaClass = org.forum.generated.Topic.class)
	List<org.forum.generated.Topic> findTopics;



	public void setBoards(List<org.forum.generated.Board> boards) {
		this.boards = boards;
	}

	public List<org.forum.generated.Board> getBoards() {
		return boards;
	}
		

	public void setNbBoards(java.lang.Integer nbBoards) {
		this.nbBoards = nbBoards;
	}

	public java.lang.Integer getNbBoards() {
		return nbBoards;
	}
		

	public void setTopics(List<org.forum.generated.Topic> topics) {
		this.topics = topics;
	}

	public List<org.forum.generated.Topic> getTopics() {
		return topics;
	}
		

	public void setFindTopics(List<org.forum.generated.Topic> findTopics) {
		this.findTopics = findTopics;
	}

	public List<org.forum.generated.Topic> getFindTopics() {
		return findTopics;
	}
		

     public String toString() {
        return "Query {"
				+ "boards: " + boards
				+ ", "
				+ "nbBoards: " + nbBoards
				+ ", "
				+ "topics: " + topics
				+ ", "
				+ "findTopics: " + findTopics
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private List<org.forum.generated.Board> boards;
		private java.lang.Integer nbBoards;
		private List<org.forum.generated.Topic> topics;
		private List<org.forum.generated.Topic> findTopics;

		public Builder withBoards(List<org.forum.generated.Board> boards) {
			this.boards = boards;
			return this;
		}
		public Builder withNbBoards(java.lang.Integer nbBoards) {
			this.nbBoards = nbBoards;
			return this;
		}
		public Builder withTopics(List<org.forum.generated.Topic> topics) {
			this.topics = topics;
			return this;
		}
		public Builder withFindTopics(List<org.forum.generated.Topic> findTopics) {
			this.findTopics = findTopics;
			return this;
		}

		public Query build() {
			Query _object = new Query();
			_object.setBoards(boards);
			_object.setNbBoards(nbBoards);
			_object.setTopics(topics);
			_object.setFindTopics(findTopics);
			return _object;
		}
	}
}
