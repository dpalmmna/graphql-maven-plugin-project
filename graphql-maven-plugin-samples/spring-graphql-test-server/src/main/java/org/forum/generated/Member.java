/** Generated by the default template from graphql-java-generator */
package org.forum.generated;

import java.util.HashMap;
import java.util.Map;


import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@Entity
@GraphQLObjectType("Member")
@SuppressWarnings("unused")
public class Member 
{

	public Member(){
		// No action
	}

	@Id
	@GeneratedValue
	@GraphQLScalar(fieldName = "id", graphQLTypeSimpleName = "ID", javaClass = java.lang.Long.class)
	java.lang.Long id;


	@GraphQLScalar(fieldName = "name", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String name;


	@GraphQLScalar(fieldName = "alias", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String alias;


	@GraphQLScalar(fieldName = "email", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String email;


	@GraphQLScalar(fieldName = "type", graphQLTypeSimpleName = "MemberType", javaClass = org.forum.generated.MemberType.class)
	@javax.persistence.Enumerated(javax.persistence.EnumType.STRING)
	org.forum.generated.MemberType type;



	public void setId(java.lang.Long id) {
		this.id = id;
	}

	public java.lang.Long getId() {
		return id;
	}
		

	public void setName(java.lang.String name) {
		this.name = name;
	}

	public java.lang.String getName() {
		return name;
	}
		

	public void setAlias(java.lang.String alias) {
		this.alias = alias;
	}

	public java.lang.String getAlias() {
		return alias;
	}
		

	public void setEmail(java.lang.String email) {
		this.email = email;
	}

	public java.lang.String getEmail() {
		return email;
	}
		

	public void setType(org.forum.generated.MemberType type) {
		this.type = type;
	}

	public org.forum.generated.MemberType getType() {
		return type;
	}
		

     public String toString() {
        return "Member {"
				+ "id: " + id
				+ ", "
				+ "name: " + name
				+ ", "
				+ "alias: " + alias
				+ ", "
				+ "email: " + email
				+ ", "
				+ "type: " + type
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private java.lang.Long id;
		private java.lang.String name;
		private java.lang.String alias;
		private java.lang.String email;
		private org.forum.generated.MemberType type;

		public Builder withId(java.lang.Long id) {
			this.id = id;
			return this;
		}
		public Builder withName(java.lang.String name) {
			this.name = name;
			return this;
		}
		public Builder withAlias(java.lang.String alias) {
			this.alias = alias;
			return this;
		}
		public Builder withEmail(java.lang.String email) {
			this.email = email;
			return this;
		}
		public Builder withType(org.forum.generated.MemberType type) {
			this.type = type;
			return this;
		}

		public Member build() {
			Member _object = new Member();
			_object.setId(id);
			_object.setName(name);
			_object.setAlias(alias);
			_object.setEmail(email);
			_object.setType(type);
			return _object;
		}
	}
}
