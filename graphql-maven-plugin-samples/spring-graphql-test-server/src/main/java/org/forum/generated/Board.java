/** Generated by the default template from graphql-java-generator */
package org.forum.generated;

import java.util.HashMap;
import java.util.Map;


import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Transient;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@Entity
@GraphQLObjectType("Board")
@SuppressWarnings("unused")
public class Board 
{

	public Board(){
		// No action
	}

	@Id
	@GeneratedValue
	@GraphQLScalar(fieldName = "id", graphQLTypeSimpleName = "ID", javaClass = java.lang.Long.class)
	java.lang.Long id;


	@GraphQLScalar(fieldName = "name", graphQLTypeSimpleName = "String", javaClass = java.lang.String.class)
	java.lang.String name;


	@GraphQLScalar(fieldName = "publiclyAvailable", graphQLTypeSimpleName = "Boolean", javaClass = java.lang.Boolean.class)
	java.lang.Boolean publiclyAvailable;


	@Transient
	@GraphQLNonScalar(fieldName = "topics", graphQLTypeSimpleName = "Topic", javaClass = org.forum.generated.Topic.class)
	List<org.forum.generated.Topic> topics;



	public void setId(java.lang.Long id) {
		this.id = id;
	}

	public java.lang.Long getId() {
		return id;
	}
		

	public void setName(java.lang.String name) {
		this.name = name;
	}

	public java.lang.String getName() {
		return name;
	}
		

	public void setPubliclyAvailable(java.lang.Boolean publiclyAvailable) {
		this.publiclyAvailable = publiclyAvailable;
	}

	public java.lang.Boolean getPubliclyAvailable() {
		return publiclyAvailable;
	}
		

	public void setTopics(List<org.forum.generated.Topic> topics) {
		this.topics = topics;
	}

	public List<org.forum.generated.Topic> getTopics() {
		return topics;
	}
		

     public String toString() {
        return "Board {"
				+ "id: " + id
				+ ", "
				+ "name: " + name
				+ ", "
				+ "publiclyAvailable: " + publiclyAvailable
				+ ", "
				+ "topics: " + topics
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private java.lang.Long id;
		private java.lang.String name;
		private java.lang.Boolean publiclyAvailable;
		private List<org.forum.generated.Topic> topics;

		public Builder withId(java.lang.Long id) {
			this.id = id;
			return this;
		}
		public Builder withName(java.lang.String name) {
			this.name = name;
			return this;
		}
		public Builder withPubliclyAvailable(java.lang.Boolean publiclyAvailable) {
			this.publiclyAvailable = publiclyAvailable;
			return this;
		}
		public Builder withTopics(List<org.forum.generated.Topic> topics) {
			this.topics = topics;
			return this;
		}

		public Board build() {
			Board _object = new Board();
			_object.setId(id);
			_object.setName(name);
			_object.setPubliclyAvailable(publiclyAvailable);
			_object.setTopics(topics);
			return _object;
		}
	}
}
