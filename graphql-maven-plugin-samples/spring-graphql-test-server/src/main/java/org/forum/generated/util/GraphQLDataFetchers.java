/** Generated by the default template from graphql-java-generator */
package org.forum.generated.util;

import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Optional;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionStage;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.dataloader.BatchLoader;
import org.dataloader.DataLoader;
import org.reactivestreams.Publisher;
import org.springframework.stereotype.Component;

import com.graphql_java_generator.util.GraphqlUtils;

import graphql.schema.DataFetcher;

/**
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@Component
@SuppressWarnings("unused")
public class GraphQLDataFetchers {

	/** The logger for this instance */
	protected Logger logger = LoggerFactory.getLogger(GraphQLDataFetchers.class);

	@Resource
	protected DataFetchersDelegateQuery dataFetchersDelegateQuery;

	@Resource
	protected DataFetchersDelegateMutation dataFetchersDelegateMutation;

	@Resource
	protected DataFetchersDelegateSubscription dataFetchersDelegateSubscription;

	@Resource
	protected DataFetchersDelegateBoard dataFetchersDelegateBoard;

	@Resource
	protected DataFetchersDelegateTopic dataFetchersDelegateTopic;

	@Resource
	protected DataFetchersDelegatePost dataFetchersDelegatePost;

	@Resource
	protected DataFetchersDelegateMember dataFetchersDelegateMember;

	@Resource
	protected GraphqlUtils graphqlUtils;

	////////////////////////////////////////////////////////////////////////////////////////////////
	// Data fetchers for DataFetchersDelegateQuery
	////////////////////////////////////////////////////////////////////////////////////////////////

	public DataFetcher<List<org.forum.generated.Board>> dataFetchersDelegateQueryBoards() {
		return dataFetchingEnvironment -> {
  
List<org.forum.generated.Board> ret = dataFetchersDelegateQuery.boards(dataFetchingEnvironment);
			logger.debug("boards: {} found rows", (ret==null) ? 0 : ret.size());

			return ret;
		};
	}


	public DataFetcher<java.lang.Integer> dataFetchersDelegateQueryNbBoards() {
		return dataFetchingEnvironment -> {
  
java.lang.Integer ret = null;
			try {
				ret = dataFetchersDelegateQuery.nbBoards(dataFetchingEnvironment);
			} catch (NoSuchElementException e) {
				// There was no items in the Optional
			}

			if (ret != null)
				logger.debug("nbBoards: 1 result found");
			else
				logger.debug("nbBoards: no result found");

			return ret;
		};
	}


	public DataFetcher<List<org.forum.generated.Topic>> dataFetchersDelegateQueryTopics() {
		return dataFetchingEnvironment -> {
			java.lang.String boardName = (java.lang.String) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("boardName"), "String", "java.lang.Long", java.lang.String.class);
  
List<org.forum.generated.Topic> ret = dataFetchersDelegateQuery.topics(dataFetchingEnvironment, boardName);
			logger.debug("topics: {} found rows", (ret==null) ? 0 : ret.size());

			return ret;
		};
	}


	public DataFetcher<List<org.forum.generated.Topic>> dataFetchersDelegateQueryFindTopics() {
		return dataFetchingEnvironment -> {
			java.lang.String boardName = (java.lang.String) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("boardName"), "String", "java.lang.Long", java.lang.String.class);
			@SuppressWarnings("unchecked")
			List<java.lang.String> keyword = (List<java.lang.String>) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("keyword"), "String", "java.lang.Long", java.lang.String.class);
  
List<org.forum.generated.Topic> ret = dataFetchersDelegateQuery.findTopics(dataFetchingEnvironment, boardName, keyword);
			logger.debug("findTopics: {} found rows", (ret==null) ? 0 : ret.size());

			return ret;
		};
	}

	////////////////////////////////////////////////////////////////////////////////////////////////
	// Data fetchers for DataFetchersDelegateMutation
	////////////////////////////////////////////////////////////////////////////////////////////////

	public DataFetcher<org.forum.generated.Board> dataFetchersDelegateMutationCreateBoard() {
		return dataFetchingEnvironment -> {
			java.lang.String name = (java.lang.String) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("name"), "String", "java.lang.Long", java.lang.String.class);
			java.lang.Boolean publiclyAvailable = (java.lang.Boolean) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("publiclyAvailable"), "Boolean", "java.lang.Long", java.lang.Boolean.class);
  
org.forum.generated.Board ret = null;
			try {
				ret = dataFetchersDelegateMutation.createBoard(dataFetchingEnvironment, name, publiclyAvailable);
			} catch (NoSuchElementException e) {
				// There was no items in the Optional
			}

			if (ret != null)
				logger.debug("createBoard: 1 result found");
			else
				logger.debug("createBoard: no result found");

			return ret;
		};
	}


	public DataFetcher<org.forum.generated.Topic> dataFetchersDelegateMutationCreateTopic() {
		return dataFetchingEnvironment -> {
			org.forum.generated.TopicInput topic = (org.forum.generated.TopicInput) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("topic"), "TopicInput", "java.lang.Long", org.forum.generated.TopicInput.class);
  
org.forum.generated.Topic ret = null;
			try {
				ret = dataFetchersDelegateMutation.createTopic(dataFetchingEnvironment, topic);
			} catch (NoSuchElementException e) {
				// There was no items in the Optional
			}

			if (ret != null)
				logger.debug("createTopic: 1 result found");
			else
				logger.debug("createTopic: no result found");

			return ret;
		};
	}


	public DataFetcher<org.forum.generated.Post> dataFetchersDelegateMutationCreatePost() {
		return dataFetchingEnvironment -> {
			org.forum.generated.PostInput post = (org.forum.generated.PostInput) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("post"), "PostInput", "java.lang.Long", org.forum.generated.PostInput.class);
  
org.forum.generated.Post ret = null;
			try {
				ret = dataFetchersDelegateMutation.createPost(dataFetchingEnvironment, post);
			} catch (NoSuchElementException e) {
				// There was no items in the Optional
			}

			if (ret != null)
				logger.debug("createPost: 1 result found");
			else
				logger.debug("createPost: no result found");

			return ret;
		};
	}


	public DataFetcher<List<org.forum.generated.Post>> dataFetchersDelegateMutationCreatePosts() {
		return dataFetchingEnvironment -> {
			@SuppressWarnings("unchecked")
			List<org.forum.generated.PostInput> spam = (List<org.forum.generated.PostInput>) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("spam"), "PostInput", "java.lang.Long", org.forum.generated.PostInput.class);
  
List<org.forum.generated.Post> ret = dataFetchersDelegateMutation.createPosts(dataFetchingEnvironment, spam);
			logger.debug("createPosts: {} found rows", (ret==null) ? 0 : ret.size());

			return ret;
		};
	}


	public DataFetcher<org.forum.generated.Member> dataFetchersDelegateMutationCreateMember() {
		return dataFetchingEnvironment -> {
			org.forum.generated.MemberInput input = (org.forum.generated.MemberInput) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("input"), "MemberInput", "java.lang.Long", org.forum.generated.MemberInput.class);
  
org.forum.generated.Member ret = null;
			try {
				ret = dataFetchersDelegateMutation.createMember(dataFetchingEnvironment, input);
			} catch (NoSuchElementException e) {
				// There was no items in the Optional
			}

			if (ret != null)
				logger.debug("createMember: 1 result found");
			else
				logger.debug("createMember: no result found");

			return ret;
		};
	}

	////////////////////////////////////////////////////////////////////////////////////////////////
	// Data fetchers for DataFetchersDelegateSubscription
	////////////////////////////////////////////////////////////////////////////////////////////////

	public DataFetcher<Publisher<org.forum.generated.Post>> dataFetchersDelegateSubscriptionSubscribeToNewPost() {
		return dataFetchingEnvironment -> {
			java.lang.String boardName = (java.lang.String) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("boardName"), "String", "java.lang.Long", java.lang.String.class);
  
Publisher<org.forum.generated.Post> ret = null;
			try {
				ret = dataFetchersDelegateSubscription.subscribeToNewPost(dataFetchingEnvironment, boardName);
			} catch (NoSuchElementException e) {
				// There was no items in the Optional
			}

			if (ret != null)
				logger.debug("subscribeToNewPost: 1 result found");
			else
				logger.debug("subscribeToNewPost: no result found");

			return ret;
		};
	}

	////////////////////////////////////////////////////////////////////////////////////////////////
	// Data fetchers for DataFetchersDelegateBoard
	////////////////////////////////////////////////////////////////////////////////////////////////

	public DataFetcher<CompletableFuture<List<org.forum.generated.Topic>>> dataFetchersDelegateBoardTopicsWithDataLoader() {
		return dataFetchingEnvironment -> {
			java.util.Date since = (java.util.Date) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("since"), "Date", "java.lang.Long", java.util.Date.class);
  			org.forum.generated.Board source = dataFetchingEnvironment.getSource();

			DataLoader<java.lang.Long, org.forum.generated.Topic> dataLoader = dataFetchingEnvironment.getDataLoader("Topic"); 
			
			// This dataLoader may be null. Let's handle that:
			if (dataLoader != null) { 
				return dataFetchersDelegateBoard.topics(dataFetchingEnvironment, dataLoader, source, since);
			} else {
				logger.warn("No DataLoader found for key '{}'", "Topic");
				return CompletableFuture.supplyAsync(
						() -> dataFetchersDelegateBoard.topics(dataFetchingEnvironment, source, since));
			}
		};
	}

	////////////////////////////////////////////////////////////////////////////////////////////////
	// Data fetchers for DataFetchersDelegateTopic
	////////////////////////////////////////////////////////////////////////////////////////////////

	public DataFetcher<CompletableFuture<org.forum.generated.Member>> dataFetchersDelegateTopicAuthorWithDataLoader() {
		return dataFetchingEnvironment -> {
  			org.forum.generated.Topic source = dataFetchingEnvironment.getSource();

			DataLoader<java.lang.Long, org.forum.generated.Member> dataLoader = dataFetchingEnvironment.getDataLoader("Member"); 
			
			// This dataLoader may be null. Let's handle that:
			if (dataLoader != null) { 
				return dataFetchersDelegateTopic.author(dataFetchingEnvironment, dataLoader, source);
			} else {
				logger.warn("No DataLoader found for key '{}'", "Member");
				return CompletableFuture.supplyAsync(
						() -> dataFetchersDelegateTopic.author(dataFetchingEnvironment, source));
			}
		};
	}


	public DataFetcher<CompletableFuture<List<org.forum.generated.Post>>> dataFetchersDelegateTopicPostsWithDataLoader() {
		return dataFetchingEnvironment -> {
			java.lang.Long memberId = (java.lang.Long) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("memberId"), "ID", "java.lang.Long", java.lang.Long.class);
			java.lang.String memberName = (java.lang.String) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("memberName"), "String", "java.lang.Long", java.lang.String.class);
			java.util.Date since = (java.util.Date) graphqlUtils.getArgument(dataFetchingEnvironment.getArgument("since"), "Date", "java.lang.Long", java.util.Date.class);
  			org.forum.generated.Topic source = dataFetchingEnvironment.getSource();

			DataLoader<java.lang.Long, org.forum.generated.Post> dataLoader = dataFetchingEnvironment.getDataLoader("Post"); 
			
			// This dataLoader may be null. Let's handle that:
			if (dataLoader != null) { 
				return dataFetchersDelegateTopic.posts(dataFetchingEnvironment, dataLoader, source, memberId, memberName, since);
			} else {
				logger.warn("No DataLoader found for key '{}'", "Post");
				return CompletableFuture.supplyAsync(
						() -> dataFetchersDelegateTopic.posts(dataFetchingEnvironment, source, memberId, memberName, since));
			}
		};
	}

	////////////////////////////////////////////////////////////////////////////////////////////////
	// Data fetchers for DataFetchersDelegatePost
	////////////////////////////////////////////////////////////////////////////////////////////////

	public DataFetcher<CompletableFuture<org.forum.generated.Member>> dataFetchersDelegatePostAuthorWithDataLoader() {
		return dataFetchingEnvironment -> {
  			org.forum.generated.Post source = dataFetchingEnvironment.getSource();

			DataLoader<java.lang.Long, org.forum.generated.Member> dataLoader = dataFetchingEnvironment.getDataLoader("Member"); 
			
			// This dataLoader may be null. Let's handle that:
			if (dataLoader != null) { 
				return dataFetchersDelegatePost.author(dataFetchingEnvironment, dataLoader, source);
			} else {
				logger.warn("No DataLoader found for key '{}'", "Member");
				return CompletableFuture.supplyAsync(
						() -> dataFetchersDelegatePost.author(dataFetchingEnvironment, source));
			}
		};
	}

	////////////////////////////////////////////////////////////////////////////////////////////////
	// Data fetchers for DataFetchersDelegateMember
	////////////////////////////////////////////////////////////////////////////////////////////////
}
